#!/usr/bin/env python3

import argparse

from read_line_format import read_line_format
from write_lst import write_lst

"""
This program will take data from a RELION project and convert it into a basic EMAN2 project and generate a .lst file. Provide the name of the RELION .star file associated with the raw particle data. An EMAN2 subdirectory will be created. The images and available metadata will be copied into the new project. CTF parameters will be extracted from the .star file and will be automatically processed through EMAN1's CTF procedure (this takes most of the time the script will require).
"""
parser = argparse.ArgumentParser(description='This program will take data from a RELION project and convert it into a basic EMAN2 project and generate a .lst file. Provide the name of the RELION .star file associated with the raw particle data.')
parser.add_argument('input', metavar='Input_file', help='The .star file generated by RELION after CTF estimation')
parser.add_argument('output', metavar='Output_file', help='The .lst file')
parser.add_argument('-v', metavar='--version', dest='relion_v', default='', help='The version of RELION used to estimate CTF')

args = parser.parse_args()

instar = args.input
lst = args.output
relion_v = args.relion_v

fnum = 0 # image number in new file

star_format = read_line_format(instar)
if star_format[-1] == 0:
    spliter = " "
elif star_format[-1] == 1:
    spliter = "\t"
with open(instar, 'r') as f:
    lines = f.readlines()

if relion_v == '3.1':
    write_lst(lines, star_format, lst, 1, spliter, fnum)
elif relion_v == '3.0.8':
    write_lst(lines, star_format, lst, 0, spliter, fnum)
else:
    if len(star_format) == 3:
        write_lst(lines, star_format, lst, 0, spliter, fnum)
    else:
        write_lst(lines, star_format, lst, 1, spliter, fnum)